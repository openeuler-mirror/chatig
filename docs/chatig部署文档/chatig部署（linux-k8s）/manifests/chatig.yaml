# Rust 应用 Deployment 配置
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kitig
  namespace: kitig
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kitig
  template:
    metadata:
      labels:
        app: kitig
    spec:
      initContainers:
        - name: init-copy-configs
          image: docker.io/library/kitig:latest
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh", "-c"]
          args:
            - |
              mkdir -p /persist/data/kitig/kitig_configs && \
              cp -r /app/src/configs/* /persist/data/kitig/kitig_configs/
          volumeMounts:
            - name: kitig-configs
              mountPath: "/persist/data/kitig/kitig_configs"
      containers:
        - name: kitig
          image: docker.io/library/kitig:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081
          env:
            - name: DATABASE_URL
              value: "postgres://kitig:kitig@pgsql-kitig-service.kitig.svc.cluster.local:5432/kitig"  # 使用 5433 端口
          volumeMounts:
            - mountPath: "/app/src/configs"
              name: kitig-configs
      volumes:
        - name: kitig-configs
          hostPath:
            path: "/persist/data/kitig/kitig_configs"
            type: Directory
      nodeSelector:
        kubernetes.io/hostname: cos12  # 绑定到含 GPU 的工作节点
---
# Rust 应用 Service 配置
apiVersion: v1
kind: Service
metadata:
  name: kitig-service
  namespace: kitig
spec:
  ports:
    - port: 8081
      targetPort: 8081
      nodePort: 30081
  selector:
    app: kitig
  type: NodePort  # 可配置为 LoadBalancer 以便外部访问
